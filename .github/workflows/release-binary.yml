name: Release-binary

on:
  push:
    branches:
      - main
      - master
  pull_request:

permissions:
  contents: read

env:
  INTERPRETER: '3.11'
  RUSTFLAGS: -C debuginfo=0
  PYO3_CROSS_PYTHON_VERSION: 3.11

jobs:
    

  build:
    name: build - ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64
          - os: windows-latest
            target: i686-pc-windows-msvc
            code-target: win32-ia32
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

    env:
      TARGET: ${{ matrix.target }}

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Rust
        run: |
              rustup override set stable
              rustup update
              rustup target add ${{ matrix.target }}
              rustup component add rust-src

      - name: Update apt repositories
        if: contains(matrix.os, 'ubuntu')
        run: |
            sudo apt-get update -y \
            && sudo apt-get install libssl-dev pkg-config

      - name: Install AArch64 target toolchain
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get install gcc-aarch64-linux-gnu libc6-dev-arm64-cross  g++-aarch64-linux-gnu

      - name: Install ARM target toolchain
        if: matrix.target == 'arm-unknown-linux-gnueabihf'
        run: sudo apt-get install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf

      - name: Build binaries
        run: cargo build --release --target ${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: ./target/release/
